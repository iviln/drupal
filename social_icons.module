<?php

/**
 * hook_menu()
 */

function social_icons_menu() {
  $items['admin/config/administration/social-icon'] = array(
    'title' => t('Social Icons'),
    'description' => t('Setting social icons'),
    'page callback' => 'social_icons_list',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/administration/social-icon/list'] = array(
    'title' => t('Social Icons List'),
    'description' => t('List social icons'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/config/administration/social-icon/add'] = array(
    'title' => t('Add Social Icons'),
    'description' => t('Setting social icons'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('social_icons_setting_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );
  $items['admin/config/administration/social-icon/%social_icons/edit'] = array(
    'title' => t('Edit Social Icons'),
    'description' => t('Setting social icons'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('social_icons_setting_form', 4),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/administration/social-icon/%social_icons/delete'] = array(
    'title' => t('Delete Social Icons'),
    'description' => t('Setting social icons'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('social_icons_delete_form', 4),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}
/**
 * hook_entity_info()
 */
 
function social_icons_entity_info() {
  return array(
    'social_icons' => array(                               
      'label' => t('Social icons'),
      'entity class' => 'Entity',
      'controller class' => 'EntityAPIController',
      'base table' => 'social_icons',
      'entity keys' => array(
        'id' => 'id',
        'label' => 'title'
       ),
      'admin ui' => array(
        'path' => 'admin/config/administration/social-icon'
       ),
      'access callback' => 'social_icons_access',
      'module' => 'social_icons',
    ),
  );
}

/**
 * Проверка прав доступа
 */
function social_icons_access($op, $entity, $account = NULL, $entity_type = 'social_icons') {
  return user_access('administer site configuration'); // сущность будет доступна только администратору сайта
}

/**
 * Возвращает альбом по его идентификатору
 */
function social_icons_load($id) {
  $result = entity_load('social_icons', array($id));
  return $result ? reset($result) : FALSE;
}

/**
 * return array for theme_image()
 *
 */
function _image_array($fid) {
  return array(
    'path' => file_load($fid)->uri,
    'width' => '50px',
    'height' => '50px',
    'attributes' => array('class' => 'some-img', 'id' => 'my-img'),
  );
}

/**
 *  social_icons_list()
 * Callback icon list
 */
function social_icons_list() {
  $social_icons = db_select('social_icons', 'si')
    ->fields('si', array('id'))
    ->orderBy('si.id')
    ->execute();
  $header = array(t('Title'), t('Link'), t('Icon'), t('Hover Icon'), t('Actions'));
  $rows = array();

  foreach ($social_icons as $id) {
    $entity = social_icons_load($id->id);
    $actions = array(
      l(t('edit'), 'admin/config/administration/social-icon/' . $id->id . '/edit'),
      l(t('delete'), 'admin/config/administration/social-icon/' . $id->id . '/delete', array('query' => array('token' => drupal_get_token('social_icons-' . $id->id)))),
    );
    $rows[] = array(
      $entity->title,
      $entity->link,
      theme_image(_image_array($entity->icon)),
      theme_image(_image_array($entity->hover_icon)),
      implode(' | ', $actions)
    );
  }
  $output = theme('table', array('header' => $header, 'rows' => $rows));

  return $output;
}

/**
 * hook_form()
 */

function social_icons_setting_form($form, &$form_state, $social_icons, $op = 'edit') {

  $form['setting'] = array(
    '#title' => t('Add icon'),
    '#type' => 'fieldset',
  );
  dpm($social_icons->id);
  $form['setting']['id'] = array(
    '#type' => 'value',
    '#value' => isset($social_icons->id) ?  $social_icons->id : FALSE,
  );
  $form['setting']['title'] = array(
    '#title' => t('Title'),
    '#type' => 'textfield',
    '#maxlength' => 64,
    '#size' => 60,
    '#required' => TRUE,
    '#attributes' => array('class' => array('title')),
    '#default_value' => isset($social_icons->title) ? $social_icons->title : '',
  );
  $form['setting']['link'] = array(
    '#title' => t('Link'),
    '#type' => 'textfield',
    '#maxlength' => 124,
    '#required' => TRUE,
    '#atributes' => array('class' => array('link')),
    '#description' => t('Input link in format "http://" or "https://".'),
    '#default_value' => isset($social_icons->link) ? $social_icons->link : '',
  );
  $form['setting']['icon'] = array(
    '#title' => t('Upload icon'),
    '#type' => 'managed_file',
    '#default_value' => isset($social_icons->icon) ? $social_icons->icon : '',

    //  '#required' => TRUE,

  );
  $form['setting']['hover_icon'] = array(
    '#title' => t('Upload hover icon'),
    '#type' => 'managed_file',
    '#default_value' => isset($social_icons->hover_icon) ? $social_icons->hover_icon : '',

    //  '#required' => TRUE,

  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit')
  );
  return $form;
}

/**
 * hook_form_validate().
 */

function social_icons_setting_form_validate($form_id, $form_state) {
  if($form_state['values']['title'] == 'Title') {
    form_set_error('title', t('"Title" do not validate this form.'));
  }
  if(!preg_match("/^(http|https):\/\//Diu",$form_state['values']['link'])) {
    form_set_error('link', t('"Link" do not validate this form.'));
  }
  $validators = array(
     'file_validate_is_image' => array(), 
  );
  $icon = file_save_upload('icon', $validators);
  $hover_icon = file_save_upload('hover_icon', $validators);
  $form_state['values']['hover_icon'] = $hover_icon;
}

/**
 * Implements hook_form_submit()
 */
function social_icons_setting_form_submit($form, &$form_state) {
   $icon = file_load($form_state['values']['icon']);
  $icon = file_save($icon);
  dpm($form_state['values']);
  if ($form_state['values']['id']) {
    $social_icons = social_icons_load($form_state['values']['id']);
    $social_icons->title = $form_state['values']['title'];
    $social_icons->link = $form_state['values']['link'];
    $social_icons->icon = $form_state['values']['icon'];
    $social_icons->hover_icon = $form_state['values']['hover_icon'];
    $social_icons = entity_save('social_icons', $social_icons);
  } else {
    $values = array(
      'title' => $form_state['values']['title'],
      'link' => $form_state['values']['link'],
      'icon' => $form_state['values']['icon'],
      'hover_icon' => $form_state['values']['hover_icon'],
    );
    $social_icons = entity_create('social_icons', $values);
    $social_icons = entity_save('social_icons', $social_icons);

  }
  if ($social_icons) {
    drupal_set_message(t('Form submit'));
  }
  $form_state['redirect'] = 'admin/config/administration/social-icon/list';
}

/**
 * Realised delete entity
 */
function social_icons_delete_form($form, &$form_state, $social_icons) {
  $form['delete']= array(
    '#title' => t('Delete Icons'),
    '#type' => 'fieldset',
  );
  $form['id'] = array(
    '#type' => 'value',
    '#value' => $social_icons->id
  );
  $form['delete']['back'] = array(
    '#type' => 'markup',
    '#markup' => l(t('Return back'), 'admin/config/administration/social-icon/list')
  );
  $form['delete']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Delete'),
    '#submit' => array('social_icon_delete_form_submit'),
   // '#validate' => TRUE,

  );
  return $form;
}

/**
 * Function delete entity social_icons
 */
function social_icon_delete_form_submit($form, &$form_state) {
  $delete = entity_delete('social_icons', $form_state['values']['id']);
  if ($delete) {
    drupal_set_message(t('Icons delete'));
  }
  $form_state['redirect'] = 'admin/config/administration/social-icon/list';
}

function social_icons_block_info(){
    $block = array();
    $block[21]['info'] = 'social_icons';
    return $block;
}

function social_icons_block_view($delta = '')
{
	$block = array();
	
	switch ($delta) {
		case 21:
		    $block['subject'] = t('Social_icons');
			$block['content'] = '';
			
			$select = db_select('social_icons', 'si')
			->fields('si', array('title', 'icon'))
			->execute();

			$users = $select->fetchAll();

			
      break;
      }
	  return $block;
}


